import { User, WAFRule, SecurityLog, DashboardStats } from './types';

export const mockUser: User = {
  id: '1',
  email: 'john.doe@example.com',
  name: 'John Doe',
  avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',
};

export const mockRules: WAFRule[] = [
  {
    id: 'rule-1',
    name: 'SQL Injection Protection',
    description: 'Blocks common SQL injection patterns in URL parameters and form data',
    content: 'SecRule ARGS "@detectSQLi" "id:1001,phase:2,block,msg:\'SQL Injection Attack Detected\'"',
    isActive: true,
    createdAt: new Date('2024-01-15'),
    updatedAt: new Date('2024-02-20'),
    ruleType: 'custom',
  },
  {
    id: 'rule-2',
    name: 'XSS Protection',
    description: 'Prevents cross-site scripting attacks by filtering malicious scripts',
    content: 'SecRule ARGS "@detectXSS" "id:1002,phase:2,block,msg:\'XSS Attack Detected\'"',
    isActive: true,
    createdAt: new Date('2024-01-20'),
    updatedAt: new Date('2024-02-22'),
    ruleType: 'custom',
  },
  {
    id: 'rule-3',
    name: 'Rate Limiting',
    description: 'Limits requests from a single IP to prevent DDoS attacks',
    content: 'SecRule IP:bf_counter "@gt 50" "id:1003,phase:1,block,expirevar:IP.bf_counter=300"',
    isActive: false,
    createdAt: new Date('2024-02-01'),
    updatedAt: new Date('2024-02-15'),
    ruleType: 'custom',
  },
  {
    id: 'rule-4',
    name: 'OWASP CRS Base Rules',
    description: 'Core rule set from OWASP ModSecurity for common web attacks',
    content: 'Include /etc/modsecurity/owasp-crs/*.conf',
    isActive: true,
    createdAt: new Date('2024-01-10'),
    updatedAt: new Date('2024-01-10'),
    ruleType: 'owasp',
  },
  {
    id: 'rule-5',
    name: 'File Upload Restrictions',
    description: 'Restricts dangerous file uploads and validates file types',
    content: 'SecRule FILES_NAMES "@rx \\.(php|jsp|asp|exe)$" "id:1005,phase:2,block,msg:\'Dangerous File Upload Detected\'"',
    isActive: true,
    createdAt: new Date('2024-02-10'),
    updatedAt: new Date('2024-02-25'),
    ruleType: 'custom',
  },
];

export const mockLogs: SecurityLog[] = [
  {
    id: 'log-1',
    timestamp: new Date('2024-03-01T10:30:15Z'),
    sourceIP: '192.168.1.100',
    requestURL: '/api/users?id=1 OR 1=1',
    threatType: 'SQL Injection',
    ruleId: 'rule-1',
    action: 'blocked',
    severity: 'high',
    userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
    requestMethod: 'GET',
    responseCode: 403,
  },
  {
    id: 'log-2',
    timestamp: new Date('2024-03-01T10:25:30Z'),
    sourceIP: '203.0.113.45',
    requestURL: '/search?q=<script>alert("xss")</script>',
    threatType: 'Cross-Site Scripting',
    ruleId: 'rule-2',
    action: 'blocked',
    severity: 'medium',
    userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36',
    requestMethod: 'GET',
    responseCode: 403,
  },
  {
    id: 'log-3',
    timestamp: new Date('2024-03-01T10:20:45Z'),
    sourceIP: '198.51.100.22',
    requestURL: '/admin/config.php',
    threatType: 'Directory Traversal',
    ruleId: 'rule-4',
    action: 'detected',
    severity: 'medium',
    userAgent: 'curl/7.68.0',
    requestMethod: 'GET',
    responseCode: 404,
  },
  {
    id: 'log-4',
    timestamp: new Date('2024-03-01T10:15:20Z'),
    sourceIP: '10.0.0.55',
    requestURL: '/upload',
    threatType: 'Malicious File Upload',
    ruleId: 'rule-5',
    action: 'blocked',
    severity: 'high',
    userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36',
    requestMethod: 'POST',
    responseCode: 403,
  },
  {
    id: 'log-5',
    timestamp: new Date('2024-03-01T10:10:10Z'),
    sourceIP: '172.16.0.100',
    requestURL: '/api/data',
    threatType: 'Suspicious Pattern',
    ruleId: 'rule-4',
    action: 'detected',
    severity: 'low',
    userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_6 like Mac OS X) AppleWebKit/605.1.15',
    requestMethod: 'GET',
    responseCode: 200,
  },
  {
    id: 'log-6',
    timestamp: new Date('2024-03-01T10:05:35Z'),
    sourceIP: '203.0.113.45',
    requestURL: '/login?user=admin&pass=../../../etc/passwd',
    threatType: 'Path Traversal',
    ruleId: 'rule-4',
    action: 'blocked',
    severity: 'critical',
    userAgent: 'python-requests/2.28.1',
    requestMethod: 'POST',
    responseCode: 403,
  },
];

export const mockStats: DashboardStats = {
  totalRequests: 15420,
  blockedRequests: 1250,
  detectedThreats: 890,
  activeRules: 4,
};